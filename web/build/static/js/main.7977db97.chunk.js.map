{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","mediaURL","setMediaURL","mediaData","setMediaData","className","value","onChange","event","target","urlChange","onClick","test","indexOf","alert","mediaURLClear","split","mediaURLNew","length","fetch","method","dataType","then","res","json","data","status","message","catch","GetImgs","map","media","index","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLA8DeA,MA3Df,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNC,EADM,KACIC,EADJ,OAEqBF,mBAAS,IAF9B,mBAENG,EAFM,KAEKC,EAFL,KAsCb,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,8BACE,uBAAOC,MAAOL,EAAUM,SAAU,SAACC,GAAD,OAtCxB,SAACA,GACjBN,EAAYM,EAAMC,OAAOH,OAqC0BI,CAAUF,QAEzD,8BACE,wBAAQG,QAAS,kBArCT,WAGd,IAFY,kDAEDC,KAAKX,KAA8C,IAAjCA,EAASY,QAAQ,WAE5C,OADAC,MAAM,cACC,EAGT,IAAIC,EAAgBd,EAASe,MAAM,KAC/BC,EAAcF,EAAcA,EAAcG,OAAS,GAGvDC,MAFa,iBAAmBF,EAElB,CACZG,OAAQ,MACRC,SAAU,SACTC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEW,IADFA,EAAKC,OAEhBtB,EAAaqB,EAAKA,MAElBX,MAAMW,EAAKE,YAGdC,OACC,WACEd,MAAM,mBAWiBe,IAAvB,sBAGJ,sBAAMxB,UAAU,WAAhB,SACGF,EAAU2B,KAAI,SAACC,EAAOC,GACrB,OAAO,8BACL,qBAAKC,IAAKF,EAAOG,IAAI,GAAG7B,UAAU,oBADnB2B,YCzCZG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.7977db97.chunk.js","sourcesContent":["import './App.css'\r\nimport { useState } from \"react\"\r\n\r\nfunction App() {\r\n  const [mediaURL, setMediaURL] = useState(\"\")\r\n  const [mediaData, setMediaData] = useState([])\r\n\r\n  const urlChange = (event) => {\r\n    setMediaURL(event.target.value)\r\n  }\r\n\r\n  const GetImgs = () => {\r\n    var regex = /http(s)?:\\/\\/([\\w-]+.)+[\\w-]+(\\/[\\w- ./?%&=]*)?/\r\n\r\n    if (!regex.test(mediaURL) || mediaURL.indexOf(\"mdpr.jp\") === -1) {\r\n      alert(\"URL Error\")\r\n      return false\r\n    }\r\n\r\n    let mediaURLClear = mediaURL.split(\" \")\r\n    let mediaURLNew = mediaURLClear[mediaURLClear.length - 1]\r\n    let apiurl = \"/api/mdpr?url=\" + mediaURLNew\r\n\r\n    fetch(apiurl, {\r\n      method: 'GET',\r\n      dataType: 'json'\r\n    }).then(res => res.json())\r\n      .then(data => {\r\n        let status = data.status\r\n        if (status === 1) {\r\n          setMediaData(data.data)\r\n        } else {\r\n          alert(data.message)\r\n        }\r\n      })\r\n      .catch(\r\n        () => {\r\n          alert(\"Server Error\")\r\n        }\r\n      )\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div>\r\n          <input value={mediaURL} onChange={(event) => urlChange(event)} />\r\n        </div>\r\n        <div>\r\n          <button onClick={() => GetImgs()} >Get</button>\r\n        </div>\r\n      </header>\r\n      <main className=\"App-main\">\r\n        {mediaData.map((media, index) => {\r\n          return <div key={index}>\r\n            <img src={media} alt=\"\" className='App-result-img' />\r\n          </div>\r\n        })}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}